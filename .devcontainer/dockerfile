FROM rocker/rstudio:4.4.2
# FROM rocker/r-ver:4.4.2

ARG NONMEM_MAJOR_VERSION=7
ARG NONMEM_MINOR_VERSION=5
ARG NONMEM_PATCH_VERSION=1
ENV NONMEM_VERSION_NO_DOTS=${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}${NONMEM_PATCH_VERSION}
ENV NONMEM_VERSION=${NONMEM_MAJOR_VERSION}.${NONMEM_MINOR_VERSION}.${NONMEM_PATCH_VERSION}

ARG NONMEMURL=https://nonmem.iconplc.com/nonmem${NONMEM_VERSION_NO_DOTS}/NONMEM${NONMEM_VERSION_NO_DOTS}.zip
ARG NONMEMZIPPASS=yorx8bqRT

ARG PSN_VERSION_MAJOR=5
ARG PSN_VERSION_MINOR=4
ARG PSN_VERSION_PATCH=0

ARG NMTHREADS=4

ARG PSN_VERSION=${PSN_VERSION_MAJOR}.${PSN_VERSION_MINOR}.${PSN_VERSION_PATCH}
ARG PSN_VERSION_UNDERSCORE=${PSN_VERSION_MAJOR}_${PSN_VERSION_MINOR}_${PSN_VERSION_PATCH}
ARG PSNURL=https://github.com/UUPharmacometrics/PsN/releases/download/v${PSN_VERSION}/PsN-${PSN_VERSION}.tar.gz

USER root

# RUN apt update
# RUN apt install -y python3 python3-venv python3-dev make
# RUN apt install -y cpanminus

# RUN apt install -y libmpich-dev
# RUN apt install -y mpich
# RUN apt install -y wget
# RUN apt install -y unzip

# RUN apt install -y pandoc
# RUN apt install -y libpq-dev
# RUN apt install -y libcairo2-dev
# RUN apt install -y libssl-dev
# RUN apt install -y libcurl4-openssl-dev
# RUN apt install -y libmariadb-dev
# RUN apt install -y libgmp-dev
# RUN apt install -y libmpfr-dev
# RUN apt install -y libxml2-dev
# RUN apt install -y libudunits2-dev
# RUN apt install -y libblas-dev
# RUN apt install -y liblapack-dev
# RUN apt install -y libmagick++-dev

# RUN apt-get update && \
#     apt-get install -y software-properties-common && \
#     add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
#     apt-get update && \
#     apt-get install -y gfortran-11 && \
#     apt-get clean && \
#     rm -rf /var/lib/apt/lists/*

# 1. Update & add the PPA
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
    apt-get update && \
    apt-get install -y gfortran-11 && \
    # 2. Set gfortran-11 as the default
    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-11 100 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 3. Install the rest of your dependencies
RUN apt-get update && \
    apt-get install -y \
        python3 \
        python3-venv \
        python3-dev \
        make \
        cpanminus \
        libmpich-dev \
        mpich \
        wget \
        unzip \
        pandoc \
        libpq-dev \
        libcairo2-dev \
        libssl-dev \
        libcurl4-openssl-dev \
        libmariadb-dev \
        libgmp-dev \
        libmpfr-dev \
        libxml2-dev \
        libudunits2-dev \
        libblas-dev \
        liblapack-dev \
        libmagick++-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN cpanm Math::Random::Free
RUN cpanm Mouse
RUN cpanm MouseX::Params::Validate
RUN cpanm Archive::Zip
RUN cpanm YAML
RUN cpanm Capture::Tiny
RUN cpanm File::Copy::Recursive
RUN cpanm File::HomeDir
RUN cpanm Math::SigFigs
RUN cpanm Statistics::Distributions
RUN cpanm Math::Matrix

ADD ${PSNURL} /tmp/psn.tar.gz
RUN tar zxf /tmp/psn.tar.gz -C /mnt

RUN mkdir -p /opt/NONMEM/nm${NONMEM_VERSION_NO_DOTS}/license &&echo "this_is_fake_license" > /opt/NONMEM/nm${NONMEM_VERSION_NO_DOTS}/license/nonmem.lic

RUN wget \
    -nv --no-check-certificate --auth-no-challenge \
    -O /tmp/NONMEM.zip \
    ${NONMEMURL}
RUN cd /tmp \
    && unzip -P ${NONMEMZIPPASS} NONMEM.zip \
    && ls /tmp \
    && if [ ! -d "/tmp/nm${NONMEM_VERSION_NO_DOTS}CD" ] ; then ln -s . nm${NONMEM_VERSION_NO_DOTS}CD ; fi \
    && cd /tmp/nm${NONMEM_VERSION_NO_DOTS}CD \
    && bash \
    SETUP${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION} \
    /tmp/nm${NONMEM_VERSION_NO_DOTS}CD \
    /opt/NONMEM/nm${NONMEM_VERSION_NO_DOTS} \
    gfortran \
    y \
    /usr/bin/ar \
    same \
    rec \
    q \
    unzip \
    nonmem${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}e.zip \
    nonmem${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION}r.zip \
    && ln -s /opt/NONMEM/nm${NONMEM_VERSION_NO_DOTS} /opt/NONMEM/nm_current \
    && ln -s /opt/NONMEM/nm_current/util/nmfe${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION} \
    /opt/NONMEM/nm_current/util/nmfe \
    && rm -r /tmp/* \
    && rm -f /opt/NONMEM/nm_current/mpi/mpi_ling/libmpich.a \
    && ln -s \
    /usr/lib/x86_64-linux-gnu/libmpich.a \
    /opt/NONMEM/nm_current/mpi/mpi_ling/libmpich.a \
    && echo "Update the default number of nodes for parallel NONMEM in the mpilinux_XX.pnm file" \
    && for NMNODES in 2 4 6 8 10 12 14 16 18 20 22 24 28 32 48 64 128; do \
    sed 's/\[nodes\]=8/\[nodes\]='$NMNODES'/' \
    /opt/NONMEM/nm_current/run/mpilinux8.pnm > \
    /opt/NONMEM/nm_current/run/mpilinux_$NMNODES.pnm ; \
    done

# add nonmem to environment
ENV PATH /opt/NONMEM/nm${NONMEM_VERSION_NO_DOTS}/run:$PATH

# making shortcuts for nonmem (in consideration of PsN)
RUN cd / \
    && mkdir -p /opt/NONMEM \
    && ln -sf /opt/NONMEM/nm${NONMEM_VERSION_NO_DOTS} /opt/NONMEM/nm_current \
    && ln -sf /opt/NONMEM/nm_current/util/nmfe${NONMEM_MAJOR_VERSION}${NONMEM_MINOR_VERSION} \
    /opt/NONMEM/nm_current/util/nmfe

RUN cpanm Math::Random
RUN cpanm Math::MatrixReal

# configure PsN
RUN apt update && apt install -y expect
RUN cd /mnt/PsN-Source && expect <<EOF
set timeout -1c
spawn perl setup.pl
expect {
    -re {Would you like help to create a configuration file} {
        send "y\r"
        exp_continue
    }
    -re {Would you like to add another one \[y/n\]} {
        send "n\r"
        exp_continue
    }
    -re {\[y/n\]} {
        send "n\r"
        exp_continue
    }
    -re {\[([\w\d/\.])+\]} {
        send "\r"
        exp_continue
    }
    -re {use the name nm\d+} {
        send "\r"
        exp_continue
    }
    -re {to exit the installation program} {
        send "\r"
    }
}
EOF

RUN export TEMP_PERL_VERSION=$(perl -v | grep -oP '(?<=\(v)[^)]*') && \
    export TEMP_PSN_CONF_PATH=/usr/local/share/perl/$(perl -v | grep -oP '(?<=\(v)[^)]*')/PsN_${PSN_VERSION_UNDERSCORE}/psn.conf && \
    mv $TEMP_PSN_CONF_PATH /mnt/psn.conf && \
    sed 's/threads=5/threads='${NMTHREADS}'/' /mnt/psn.conf > $TEMP_PSN_CONF_PATH && \
    PSN_NONMEM_VERSION=$(echo $NONMEM_VERSION | sed 's/\.[0-9]$//g') && \
    MPICOUNT=$(for MPINAME in /opt/NONMEM/nm_current/run/mpilinux_[0-9]*.pnm; do echo $(basename $MPINAME | sed 's/[^0-9]*//g'); done | sort -n) && \
    for PARACOUNT in $MPICOUNT; do \
        printf "parallel${PARACOUNT}=/opt/NONMEM/nm_current,${PSN_NONMEM_VERSION}\n" >> $TEMP_PSN_CONF_PATH; \
    done && \
    printf "\n\n" >> $TEMP_PSN_CONF_PATH && \
    for PARACOUNT in $MPICOUNT; do \
        printf "[default_options_parallel${PARACOUNT}]\nparafile=/opt/NONMEM/nm_current/run/mpilinux_${PARACOUNT}.pnm\n" >> $TEMP_PSN_CONF_PATH; \
    done

RUN mkdir -p /opt/PsN/current

ARG R_library="'languageserver', 'xpose', 'xpose4', 'dplyr', 'ggpubr', 'reshape', 'ggplot2', 'rxode2', 'nlmixr2', 'devtools'"
ARG R_library_for_devtools="'kassambara/ggpubr','UUPharmacometrics/PsNR'"

RUN R -e "install.packages(c(${R_library}))"
RUN R -e "lapply(c(${R_library_from_devtools}), devtools::install_github)"

WORKDIR /workspace

EXPOSE 8787